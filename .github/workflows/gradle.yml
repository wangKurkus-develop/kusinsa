# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
    - uses: actions/checkout@v3
    - run: touch ./src/main/resources/application-prod.properties
    - run: echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application-prod.properties
    - run: cat ./src/main/resources/application-prod.properties
    
    - run: touch ./src/test/resources/application-prod.properties
    - run: echo "${{ secrets.PRO_TEST }}" > ./src/test/resources/application.properties
    - run: cat ./src/test/resources/application-prod.properties
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build Gradle 
      run : ./gradlew build 
      
    - name: 테스트 결과를 PR에 코멘트로 등록합니다
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
        files: '**/build/test-results/test/TEST-*.xml'
      
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{secrets.DOCKER_USERNAME}}
        password: ${{secrets.DOCKER_PASSWORD}}
    - name: build and release to DockerHub
      env:
        REPO: icwgi897/actiontest # 레포 이름
      run: |
        docker build -t $REPO .
        docker push $REPO
